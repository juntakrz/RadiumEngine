#version 460
#extension GL_EXT_nonuniform_qualifier : require

layout(local_size_x = 8, local_size_y = 4) in;
layout(set = 0, binding = 0, rgba16f) uniform imageCube images[];

layout (push_constant) uniform PushBlock {
	uint imageIndex;
	uint imageCount;
} pushBlock;

void main() {
	ivec2 sourceSize = imageSize(images[pushBlock.imageIndex]);
	ivec2 targetSize = imageSize(images[pushBlock.imageIndex + 2]);
	uint divider = sourceSize.x / targetSize.x;

	ivec3 sourcePosition = ivec3(gl_GlobalInvocationID);
	ivec3 targetPosition = ivec3(ivec2(sourcePosition.x / divider, sourcePosition.y / divider), sourcePosition.z);

	vec3 color = imageLoad(images[pushBlock.imageIndex], sourcePosition).rgb;

	if (sourcePosition.x >= sourceSize.x || sourcePosition.y >= sourceSize.y) {
		return;
	}

	imageStore(images[pushBlock.imageIndex + 1], sourcePosition, vec4(color, 1.0));
	imageStore(images[pushBlock.imageIndex + 2], targetPosition, vec4(color, 1.0));
}